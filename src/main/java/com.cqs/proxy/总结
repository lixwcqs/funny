1.代理分为两类:静态代理和动态代理,动态代理又分为JDK代理(被代理对象必须为接口)与Cglib代理(通过继承实现,所以被代理对象方法不能为final)
2.jdk动态代理通过Proxy.newInstance方法实现代理,其中传入的InvocationHandler对象其实就是"静态代理模式",这或许就是代理的体现的,
  其动态性表现在代理对象是通过ClassLoader动态生成的,而不是调用被代理对象的构造器生成的[可以通过讲代理对象不能类型转换为被代理对象
  看出两者类型差异,这也说明了代理对象的类型是动态生成的,而不是静态预定义好的]
3.cglib要求被代理的对象必须含有无参构造器.
  cglib不能代理final方法[不会报错,只是加强部分失效,效果相当于(实际上仍是代理对象)被代理在运行]